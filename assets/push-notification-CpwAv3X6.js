const c="https://story-api.dicoding.dev/v1",u="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk",l=async()=>{if("Notification"in window){const s=await Notification.requestPermission();return console.log("Notification permission:",s),s==="granted"}return console.log("Notifications not supported"),!1},g=async()=>{if("serviceWorker"in navigator&&"PushManager"in window)try{console.log("Subscribing to push notifications...");const s=await navigator.serviceWorker.ready;console.log("Service Worker ready for push subscription:",s);const o=await s.pushManager.getSubscription();if(o)return console.log("Already subscribed:",o),await i(o),o;const e=await s.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:p(u)});return console.log("Push subscription created:",e),await i(e),e}catch(s){throw console.error("Error subscribing to push:",s),s}else throw new Error("Push messaging is not supported")},p=s=>{const o="=".repeat((4-s.length%4)%4),e=(s+o).replace(/-/g,"+").replace(/_/g,"/"),r=window.atob(e),n=new Uint8Array(r.length);for(let t=0;t<r.length;++t)n[t]=r.charCodeAt(t);return n},i=async s=>{const o=localStorage.getItem("token");if(!o)throw new Error("User not authenticated");const e={endpoint:s.endpoint,keys:{p256dh:a(s.getKey("p256dh")),auth:a(s.getKey("auth"))}};console.log("Sending subscription to server:",e);const r=await fetch(`${c}/notifications/subscribe`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(e)});if(!r.ok){const t=await r.json();throw console.error("Failed to send subscription to server:",t),new Error(t.message||"Failed to subscribe to push notifications")}const n=await r.json();return console.log("Subscription sent to server successfully:",n),n},a=s=>{const o=new Uint8Array(s);let e="";return o.forEach(r=>e+=String.fromCharCode(r)),window.btoa(e)},b=async()=>{if("serviceWorker"in navigator&&"PushManager"in window)try{const e=!!await(await navigator.serviceWorker.ready).pushManager.getSubscription();return console.log("Subscription status:",e),e}catch(s){return console.error("Error checking subscription status:",s),!1}return console.log("Push messaging not supported"),!1},h=async()=>{try{console.log("⚙️ Memulai setup notifikasi");const s=await l();if(console.log("🔐 Permission granted?",s),!s)throw new Error("Notification permission denied");const o=await b();return console.log("🔄 Sudah subscribe?",o),o?{success:!0,message:"Sudah berlangganan notifikasi push"}:(await g(),{success:!0,message:"Berhasil berlangganan notifikasi push"})}catch(s){return console.error("❌ Gagal setup notifikasi:",s),{success:!1,message:s.message}}};export{b as checkSubscriptionStatus,l as requestNotificationPermission,h as setupPushNotification,g as subscribeUserToPush};
